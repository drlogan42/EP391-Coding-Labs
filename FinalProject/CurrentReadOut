//This program will measure the voltage across a 1Ω shunt resistor (ADC1 - ADC2),
//convert it to current using Ohm's Law, and send the result over UART to PuTTY.

//Definitions
#define F_CPU 1000000UL
#define UART_UBRR_VALUE 12UL  // For 9600 baud with U2X0 = 1

//Includes
#include <avr/io.h>
#include <util/delay.h>
#include <stdlib.h>

//Function Prototypes
void adc_init(void);
void uart_init(void);				
void write_uart(char* c);			
uint16_t analog(uint8_t channel);	
void send_current(float current);	

//Constants
#define REFERENCEVOLTAGE 5.0	// Reference voltage (AVCC)
#define SHUNT_RESISTANCE 1.0	// Shunt resistor value in ohms

//Main
int main(void) {
	uart_init();	//Initialize UART
	adc_init();		//Initialize ADC

	while (1) {
		// Read voltages from both ends of the shunt resistor
		uint16_t adc_val_top = analog(1);	// ADC1: system ground (top of shunt)
		uint16_t adc_val_bottom = analog(2); // ADC2: battery ground (bottom of shunt)

		// Convert ADC readings to voltages
		float v_top = (adc_val_top / 1023.0) * REFERENCEVOLTAGE;
		float v_bottom = (adc_val_bottom / 1023.0) * REFERENCEVOLTAGE;

		// Voltage drop across the shunt
		float v_shunt = v_top - v_bottom;

		// Calculate current using Ohm’s Law: I = V / R
		float current = v_shunt / SHUNT_RESISTANCE;

		// Send current reading via UART
		send_current(current);

		_delay_ms(100);	//Delay for readability
	}

	return 0;
}

//UART Setup Function
void uart_init(void) {
	UBRR0H = (uint8_t)(UART_UBRR_VALUE >> 8);	
	UBRR0L = (uint8_t)(UART_UBRR_VALUE);		
	UCSR0A |= (1 << U2X0);						
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);		
	UCSR0B = (1 << TXEN0);						
}

//Write UART Function
void write_uart(char* c) {
	while (*c) {
		while (!(UCSR0A & (1 << UDRE0)));	
		UDR0 = *c++;
	}
}

//ADC Setup Function
void adc_init(void) {
	ADMUX = (1 << REFS0);					
	ADCSRA = (1 << ADEN) | (1 << ADPS1) | (1 << ADPS0);	
}

//ADC Read Function
uint16_t analog(uint8_t channel) {
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);	
	ADCSRA |= (1 << ADSC);						
	while (ADCSRA & (1 << ADSC));				
	return ADC;									
}

//Send Current Function
void send_current(float current){
	char buffer[32];					
	dtostrf(current, 2, 4, buffer);		//Convert float to string (2-wide, 4 decimal places)

	//Write to UART
	write_uart("Current: ");
	write_uart(buffer);					
	write_uart(" A\r\n");				
}
