//This program will test for a given input voltage from battery on ADC0 and output the voltage over UART to be observed in PuTTY

//Definitions
#define F_CPU 1000000UL
#define UART_UBRR_VALUE 12UL  // For 9600 baud with U2X0 = 1

//Includes
#include <avr/io.h>
#include <util/delay.h>
#include <stdlib.h>

//Function Prototypes
void adc_init(void);
void uart_init(void);							//Initialize AVR UART
void write_uart(char* c);						//Write String to UART
uint16_t analog(uint8_t channel);				//Read any ADC channel and get 10-bit result
void send_value(char* label, float value);	//

//Constants
int REFERENCEVOLTAGE = 5;			//Set reference voltage to 5V
int SHUNT_RESISTANCE = 1;			//Shunt resistance
float DIVFACTOR = 2;				//Multiply voltage after division to get voltage at battery terminals

//Main
int main(void) {
	//Initialize UART and ADC
	uart_init();
	adc_init();

	//While loop runs forever
	while (1) {
		//Shunt 1 
		uint16_t adc_val0 = analog(0);													//Read from ADC0 (Top of Shunt)
		uint16_t adc_val1 = analog(1);													//Read from ADC1 (Bottom of Shunt)
		
		float v_high1 = (adc_val0 / 1023.0)*REFERENCEVOLTAGE*DIVFACTOR;
		float v_low1 = (adc_val1 / 1023.0)*REFERENCEVOLTAGE*DIVFACTOR;

		float v_dif1 = v_high1 - v_low1;
		
		float current1 = v_dif1 / SHUNT_RESISTANCE;

		send_value("Voltage High1", v_high1);															//Send voltage over to UART
		send_value("Voltage Low1", v_low1);															//Send voltage over to UART
		send_value("Voltage Current1", current1);															//Send voltage over to UART
		
		
		//Shunt 2
		uint16_t adc_val2 = analog(2);													//Read from ADC0 (Top of Shunt)
		uint16_t adc_val3= analog(3);													//Read from ADC1 (Bottom of Shunt)
				
		float v_high2 = (adc_val2 / 1023.0)*REFERENCEVOLTAGE*DIVFACTOR;
		float v_low2 = (adc_val3 / 1023.0)*REFERENCEVOLTAGE*DIVFACTOR;

		float v_dif2 = v_high2 - v_low2;
				
		float current2 = v_dif2 / SHUNT_RESISTANCE;

		send_value("Voltage High2", v_high2);															//Send voltage over to UART
		send_value("Voltage Low2", v_low2);															//Send voltage over to UART
		send_value("Voltage Current2", current2);															//Send voltage over to UART


		//Shunt 3
		uint16_t adc_val4 = analog(4);													//Read from ADC0 (Top of Shunt)
		uint16_t adc_val5= analog(5);													//Read from ADC1 (Bottom of Shunt)
		
		float v_high3 = (adc_val4 / 1023.0)*REFERENCEVOLTAGE*DIVFACTOR;
		float v_low3 = (adc_val5 / 1023.0)*REFERENCEVOLTAGE*DIVFACTOR;

		float v_dif3 = v_high3 - v_low3;
		
		float current3 = v_dif3 / SHUNT_RESISTANCE;

		send_value("Voltage High3", v_high3);															//Send voltage over to UART
		send_value("Voltage Low3", v_low3);															//Send voltage over to UART
		send_value("Voltage Current3", current3);															//Send voltage over to UART

		_delay_ms(1000);														//Delay for readability
	}
	return 0;
}

//UART Setup Function
void uart_init(void) {
	
	//Set BAUD rate registers (UBRR0H:UBRR0L) for 9600 bps
	UBRR0H = (uint8_t)(UART_UBRR_VALUE >> 8);	//Load high byte of baud value
	UBRR0L = (uint8_t)(UART_UBRR_VALUE);		//Load low byte of baud value
	
	UCSR0A |= (1 << U2X0);						//Double speed U2X0 = 1
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);		//8 data bits, no parity, 1 stop bit
	UCSR0B = (1 << TXEN0);						//Enable TX
}

//Write UART Function
void write_uart(char* c) {
	while (*c) {							//Loop through each char in string until null terminator '\0'
		while (!(UCSR0A & (1 << UDRE0)));	//Wait until buffer is empty (ready to send)
		UDR0 = *c++;						//Load char into UART data register to transmit and move to next char
	}
}

//ADC Setup Function
void adc_init(void) {
	ADMUX = (1 << REFS0);					//AVCC as reference
	ADCSRA = (1 << ADEN)					//Enable ADC 
	| (1 << ADPS1) | (1 << ADPS0);			//Prescaler = 8 (1 MHz / 8 = 125 kHz)
}											//Result is Right Adjusted for precise measurement 

//ADC Read Function
uint16_t analog(uint8_t channel) {
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);		//Select ADC channel
	ADCSRA |= (1 << ADSC);							//Start conversion
	while (ADCSRA & (1 << ADSC));					//Wait for conversion to finish
	return ADC;										//Return 10-bit result
}

//Send Voltage Function
void send_value(char* label, float value){
	char buffer[32];					//Hold string in a buffer
	
	dtostrf(value, 2, 4, buffer);		//Convert float to string (width=6, precision=2)
	
	//Write to UART
	write_uart(label);
	write_uart(": ");
	write_uart(buffer);					//Contents of voltage
	write_uart(" V\r\n");				//Newline
}
